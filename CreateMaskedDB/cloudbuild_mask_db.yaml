steps:
  - id: 'clone-instance'
    name: 'gcr.io/cloud-builders/gcloud-slim'
    waitFor: ['-']
    entrypoint: 'bash'
    env:
      - 'PROJECT_ID=${PROJECT_ID}'
    args:
      - 'CreateMaskedDB/export-masked-database.sh'
      - 'clone_instance'
    timeout: '1200s'
  - id: 'mask-database'
    name: 'gcr.io/cloud-builders/gcloud-slim'
    waitFor: ['clone-instance']
    env:
      - 'PROJECT_ID=${PROJECT_ID}'
      - '_DATABASE_PORT=13306'
      - '_INSTANCE_CONNECTION_NAME=${PROJECT_ID}:asia-northeast1:main-clone'
      - 'SERVICE_ACCOUNT=export-mask-database'
    script: |
      #!/usr/bin/env bash
      set -euo pipefail
      apt update -y > /dev/null
      apt install -y mysql-client > /dev/null
      curl -o cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.6.1/cloud-sql-proxy.linux.amd64 > /dev/null
      chmod +x cloud-sql-proxy
      ./cloud-sql-proxy --port ${_DATABASE_PORT} ${_INSTANCE_CONNECTION_NAME} &
      PID=$! && echo "Cloud SQL Proxy started - pid: $PID"
      sleep 5
      DB_PASSWORD=$(gcloud sql generate-login-token)
      mysql -u $SERVICE_ACCOUNT -p$DB_PASSWORD --host 127.0.0.1 --port 13306 --enable-cleartext-plugin <CreateMaskedDB/mask.sql
      kill $PID && echo "Cloud SQL Proxy killed - pid: $PID"
  - id: 'export-sql'
    name: 'gcr.io/cloud-builders/gcloud-slim'
    waitFor: ['mask-database']
    entrypoint: 'bash'
    env:
      - 'PROJECT_ID=${PROJECT_ID}'
    args:
      - 'CreateMaskedDB/export-masked-database.sh'
      - 'export_sql'
options:
  logging: CLOUD_LOGGING_ONLY
