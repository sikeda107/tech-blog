apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  annotations:
    run.googleapis.com/ingress: all
    # プレビューなので BETA が必要です
    run.googleapis.com/launch-stage: BETA
  labels:
    cloud.googleapis.com/location: asia-northeast1
  name: http2-test
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/maxScale: '100'
        # Node.js アプリケーションが起動してから Nginx が起動するようにします
        run.googleapis.com/container-dependencies: '{"proxy":["application"]}'
      labels:
        run.googleapis.com/startupProbeType: Default
    spec:
      containerConcurrency: 80
      containers:
        # 先程デプロイした Nginx イメージを指定します
        - image: asia-northeast1-docker.pkg.dev/http2-cloudrun-test/my-repo/nginx-proxy:latest
          name: proxy
          ports:
            # HTTP/2 を有効化します
            - containerPort: 8080
              name: h2c
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
          startupProbe:
            failureThreshold: 1
            periodSeconds: 240
            tcpSocket:
              port: 8080
            timeoutSeconds: 240
        # はじめにデプロイしたアプリケーションのイメージを指定します
        - image: asia-northeast1-docker.pkg.dev/http2-cloudrun-test/cloud-run-source-deploy/http1-test:latest
          name: application
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
          env:
            # 8080 は Nginx で使うので Node.js は 15000 で起動するように環境変数を設定します
            - name: PORT
              value: '15000'
          startupProbe:
            failureThreshold: 1
            periodSeconds: 240
            tcpSocket:
              port: 15000
            timeoutSeconds: 240
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 15000
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 10
      serviceAccountName: 1027898580269-compute@developer.gserviceaccount.com
      timeoutSeconds: 300
  traffic:
    - latestRevision: true
      percent: 100
